while: 
0b00011000	;Mov ACC, CTE
0b00000001	;Y
0b00101000	;Mov DPTR, ACC
0b00100000	;Mov, ACC, [DPTR]
0b00010000	;Mov, A, ACC
0b01011000	;JZ A fin

;carry = x&y
0b00011000	;Mov ACC, CTE
0b00000010	;X
0b00101000	;Mov DPTR, ACC
0b00100000	;Mov, ACC, [DPTR]
0b01000000	;AND ACC, A
0b00011000	;Mov ACC, CTE
0b00000000	;carry
0b00101000	;Mov DPTR, ACC



; x = x ^ y 
0b00011000	;Mov ACC, CTE
0b00000010	;X
0b00101000	;Mov DPTR, ACC
0b00100000	;Mov, ACC, [DPTR] 
0b00010000	;Mov A, ACC
0b00011000	;Mov ACC, CTE
0b00000001	;Y
0b00101000	;Mov DPTR, ACC
0b00100000	;Mov, ACC, [DPTR]
XOR A, ACC
0b00011000	;Mov ACC, CTE
0b00000010	;X
0b00101000	;Mov DPTR, ACC
0b00001000	;Mov ACC, A
0b00110000	;MOV [DPTR], ACC


y = carry << 1 
0b00011000	;Mov ACC, CTE
0b00000000	;carry
0b00101000	;Mov DPTR, ACC
0b00100000	;Mov, ACC, [DPTR] 
0b00010000	;Mov A, ACC
0b01001000	;ADD ACC, A
0b00011000	;Mov ACC, CTE
0b00000001	;Y
0b00101000	;Mov DPTR, ACC
0b00001000	;MOV ACC, A
0b00110000	;MOV [DPTR], ACC
0b01010000	;JMP WHILE
			

END: 		
0b11111000	;HALT

X:		00000010
Y:		00000001
CARRY:	00000000
